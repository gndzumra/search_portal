{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  /* eslint-disable */\n  // eslint-disable-next-line\n  name: \"Home\",\n  data: function data() {\n    return {\n      searchString: \"\",\n      postList: []\n    };\n  },\n  methods: {\n    getData: function getData() {\n      var _this = this;\n\n      axios.get(\"mockData.json\").then(function (response) {\n        var list = response.data.data;\n\n        for (var i = 0; i < list.length; i++) {\n          var x = list[i];\n\n          _this.postList.push({\n            name: x[0],\n            company: x[1],\n            email: x[2],\n            date: x[3],\n            country: x[4],\n            city: x[5]\n          });\n        } // class Post {\n        //   constructor(title, link, author, img) {\n        //     this.title = title;\n        //     this.link = link;\n        //     this.author = author;\n        //     this.img = img;\n        //   }\n        // }\n\n      });\n    }\n  },\n  computed: {\n    filteredData: function filteredData() {\n      var self = this; // if (!self.searchString) {\n      //   return (searchData = \"Aran覺lan bulunamad覺\");\n      // }\n      // self.searchString = self.searchString.trim().toLowerCase();\n      // self.postList = self.postList.filter((item) => {\n      //   if (item.name.toLowerCase().indexOf(self.searchString) !== -1) {\n      //     return item;\n      //   }\n      // });\n      // this.postList = self.postList;\n      // return self.postList;\n      // return postList.filter((post) => {\n      //   return post.name.toLowerCase().includes(searchString.toLowerCase());\n      // });\n\n      self.postList = self.postList.filter(function (customer) {\n        if (customer.name.toLowerCase().indexOf(self.searchString.toLowerCase()) >= 0 || customer.company.toLowerCase().indexOf(self.searchString.toLowerCase()) >= 0 || customer.city.toLowerCase().indexOf(self.searchString.toLowerCase()) >= 0) return customer;\n      });\n      return self.postList;\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    console.log(\"-----------++++\");\n    axios.get(\"mockData.json\").then(function (response) {\n      var list = response.data.data;\n\n      for (var i = 0; i < list.length; i++) {\n        var x = list[i];\n\n        _this2.postList.push({\n          name: x[0],\n          company: x[1],\n          email: x[2],\n          date: x[3],\n          country: x[4],\n          city: x[5]\n        });\n      }\n    });\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AAEA;EACA;EACA;EACAA,YAHA;EAKAC;IAAA;MACAC,gBADA;MAEAC;IAFA;EAAA,CALA;EASAC;IACAC,OADA,qBACA;MAAA;;MACAC;QACA;;QACA;UACA;;UAEA;YACAN,UADA;YAEAO,aAFA;YAGAC,WAHA;YAIAC,UAJA;YAKAC,aALA;YAMAC;UANA;QAQA,CAbA,CAcA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;MACA,CAtBA;IAuBA;EAzBA,CATA;EAoCAC;IACAC,YADA,0BACA;MACA,gBADA,CAGA;MACA;MACA;MAEA;MAEA;MACA;MACA;MACA;MACA;MAEA;MAEA;MAEA;MACA;MACA;;MAEAC;QACA,IACAC,cACAC,WADA,GAEAC,OAFA,CAEAH,+BAFA,KAEA,CAFA,IAGAC,iBACAC,WADA,GAEAC,OAFA,CAEAH,+BAFA,KAEA,CALA,IAMAC,cACAC,WADA,GAEAC,OAFA,CAEAH,+BAFA,KAEA,CATA,EAWA;MACA,CAbA;MAcA;IACA;EAvCA,CApCA;EA6EAI,OA7EA,qBA6EA;IAAA;;IACAC;IACAb;MACA;;MACA;QACA;;QAEA;UACAN,UADA;UAEAO,aAFA;UAGAC,WAHA;UAIAC,UAJA;UAKAC,aALA;UAMAC;QANA;MAQA;IACA,CAdA;EAeA;AA9FA","names":["name","data","searchString","postList","methods","getData","axios","company","email","date","country","city","computed","filteredData","self","customer","toLowerCase","indexOf","created","console"],"sourceRoot":"src/components","sources":["Home.vue"],"sourcesContent":["<template>\n  <v-app id=\"inspire\">\n    <v-main>\n      <v-container>\n        <v-row>\n          <v-col>\n            <v-btn\n              style=\"float: right; margin-top: 2%; border-radius: 12px\"\n              class=\"mb-2\"\n              color=\"#204080\"\n            >\n              <span style=\"color: white; text-transform: none\">\n                Add New Record\n              </span>\n            </v-btn>\n          </v-col>\n        </v-row>\n\n        <!-- <v-row style=\"height: 10%; border-style: dashed\">\n          <v-col cols=\"\">\n            <v-img\n              :src=\"require('../../public/logo.png')\"\n              class=\"my-3\"\n              contain\n              height=\"20%\"\n              width=\"100%\"\n            />\n          </v-col>\n        </v-row> -->\n\n        <v-row style=\"text-align: -webkit-center; height: 40%\">\n          <v-col cols=\"12\" style=\"text-align: -webkit-center\">\n            <p style=\"text-align: center\">Find in records</p>\n          </v-col>\n          <v-col cols=\"12\" md=\"6\" style=\"margin-left: 15%\">\n            <v-text-field\n              v-model=\"searchString\"\n              outlined\n              clearable\n              prepend-icon=\"fas fa-searche\"\n              @change=\"filteredData()\"\n            ></v-text-field>\n          </v-col>\n          <v-col cols=\"12\" md=\"4\">\n            <v-btn\n              color=\"primary\"\n              x-large\n              class=\"white--text\"\n              @click=\"filteredData()\"\n              style=\"border-radius: 12px\"\n            >\n              <p style=\"text-transform: none; margin-top: 5%\">Search</p>\n            </v-btn>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col>\n            <v-list v-for=\"(data, x) in filteredData\" :key=\"x + 1\">\n              <v-list-item>\n                <v-list-item-icon>\n                  <v-icon color=\"indigo\"> mdi-map-marker </v-icon>\n                </v-list-item-icon>\n\n                <v-list-item-content>\n                  <v-list-item-title>{{ data.name }}</v-list-item-title>\n                  <v-list-item-subtitle>\n                    {{ data.city }} - {{ data.country }}</v-list-item-subtitle\n                  >\n                </v-list-item-content>\n              </v-list-item>\n              <v-divider inset></v-divider>\n            </v-list>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  /* eslint-disable */\n  // eslint-disable-next-line\n  name: \"Home\",\n\n  data: () => ({\n    searchString: \"\",\n    postList: [],\n  }),\n  methods: {\n    getData() {\n      axios.get(\"mockData.json\").then((response) => {\n        const list = response.data.data;\n        for (let i = 0; i < list.length; i++) {\n          const x = list[i];\n\n          this.postList.push({\n            name: x[0],\n            company: x[1],\n            email: x[2],\n            date: x[3],\n            country: x[4],\n            city: x[5],\n          });\n        }\n        // class Post {\n        //   constructor(title, link, author, img) {\n        //     this.title = title;\n        //     this.link = link;\n        //     this.author = author;\n        //     this.img = img;\n        //   }\n        // }\n      });\n    },\n  },\n  computed: {\n    filteredData() {\n      var self = this;\n\n      // if (!self.searchString) {\n      //   return (searchData = \"Aran覺lan bulunamad覺\");\n      // }\n\n      // self.searchString = self.searchString.trim().toLowerCase();\n\n      // self.postList = self.postList.filter((item) => {\n      //   if (item.name.toLowerCase().indexOf(self.searchString) !== -1) {\n      //     return item;\n      //   }\n      // });\n\n      // this.postList = self.postList;\n\n      // return self.postList;\n\n      // return postList.filter((post) => {\n      //   return post.name.toLowerCase().includes(searchString.toLowerCase());\n      // });\n\n      self.postList = self.postList.filter((customer) => {\n        if (\n          customer.name\n            .toLowerCase()\n            .indexOf(self.searchString.toLowerCase()) >= 0 ||\n          customer.company\n            .toLowerCase()\n            .indexOf(self.searchString.toLowerCase()) >= 0 ||\n          customer.city\n            .toLowerCase()\n            .indexOf(self.searchString.toLowerCase()) >= 0\n        )\n          return customer;\n      });\n      return self.postList;\n    },\n  },\n  created() {\n    console.log(\"-----------++++\");\n    axios.get(\"mockData.json\").then((response) => {\n      const list = response.data.data;\n      for (let i = 0; i < list.length; i++) {\n        const x = list[i];\n\n        this.postList.push({\n          name: x[0],\n          company: x[1],\n          email: x[2],\n          date: x[3],\n          country: x[4],\n          city: x[5],\n        });\n      }\n    });\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}