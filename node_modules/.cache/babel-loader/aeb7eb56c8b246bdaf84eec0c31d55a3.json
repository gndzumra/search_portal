{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  /* eslint-disable */\n  // eslint-disable-next-line\n  name: \"Home\",\n  data: function data() {\n    return {\n      searchString: \"\",\n      postList: [],\n      closeOnClick: false\n    };\n  },\n  methods: {\n    getData: function getData() {\n      var _this = this;\n\n      axios.get(\"mockData.json\").then(function (response) {\n        var list = response.data.data;\n\n        for (var i = 0; i < list.length; i++) {\n          var x = list[i];\n\n          _this.postList.push({\n            name: x[0],\n            company: x[1],\n            email: x[2],\n            date: x[3],\n            country: x[4],\n            city: x[5]\n          });\n        } // class Post {\n        //   constructor(title, link, author, img) {\n        //     this.title = title;\n        //     this.link = link;\n        //     this.author = author;\n        //     this.img = img;\n        //   }\n        // }\n\n      });\n    }\n  },\n  computed: {\n    filteredData: function filteredData() {\n      var self = this;\n      self.postList = self.postList.filter(function (customer) {\n        if (customer.name.toLowerCase().indexOf(self.searchString.toLowerCase()) >= 0 || customer.company.toLowerCase().indexOf(self.searchString.toLowerCase()) >= 0 || customer.city.toLowerCase().indexOf(self.searchString.toLowerCase()) >= 0) return customer;\n      });\n      return self.postList;\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    axios.get(\"mockData.json\").then(function (response) {\n      var list = response.data.data;\n\n      for (var i = 0; i < list.length; i++) {\n        var x = list[i];\n\n        _this2.postList.push({\n          name: x[0],\n          company: x[1],\n          email: x[2],\n          date: x[3],\n          country: x[4],\n          city: x[5]\n        });\n      }\n    });\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AAEA;EACA;EACA;EACAA,YAHA;EAKAC;IAAA;MACAC,gBADA;MAEAC,YAFA;MAGAC;IAHA;EAAA,CALA;EAUAC;IACAC,OADA,qBACA;MAAA;;MACAC;QACA;;QACA;UACA;;UAEA;YACAP,UADA;YAEAQ,aAFA;YAGAC,WAHA;YAIAC,UAJA;YAKAC,aALA;YAMAC;UANA;QAQA,CAbA,CAcA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;MACA,CAtBA;IAuBA;EAzBA,CAVA;EAqCAC;IACAC,YADA,0BACA;MACA;MACAC;QACA,iFACAC,4EADA,IAEAA,yEAFA,EAGA;MACA,CALA;MAOA;IACA;EAXA,CArCA;EAkDAC,OAlDA,qBAkDA;IAAA;;IACAV;MACA;;MACA;QACA;;QAEA;UACAP,UADA;UAEAQ,aAFA;UAGAC,WAHA;UAIAC,UAJA;UAKAC,aALA;UAMAC;QANA;MAQA;IACA,CAdA;EAeA;AAlEA","names":["name","data","searchString","postList","closeOnClick","methods","getData","axios","company","email","date","country","city","computed","filteredData","self","customer","created"],"sourceRoot":"src/pages/Order","sources":["List.vue"],"sourcesContent":["<template>\r\n  <v-app id=\"inspire\">\r\n    <v-main>\r\n      <v-container>\r\n        <v-row>\r\n          <v-col>\r\n            <v-btn\r\n              style=\"float: right; margin-top: 2%; border-radius: 12px\"\r\n              class=\"mb-2\"\r\n              color=\"#204080\"\r\n            >\r\n              <span style=\"color: white; text-transform: none\">\r\n                Add New Record\r\n              </span>\r\n            </v-btn>\r\n          </v-col>\r\n        </v-row>\r\n\r\n        <v-row style=\"text-align: -webkit-center; height: 40%\">\r\n          <div id=\"app\">\r\n            <v-app id=\"inspire\">\r\n              <v-row justify=\"space-around\">\r\n                <v-menu\r\n                  max-width=\"400px\"\r\n                  max-height=\"200px\"\r\n                  :nudge-width=\"200\"\r\n                  :close-on-click=\"closeOnClick\"\r\n                  offset-y\r\n                >\r\n                  <template v-slot:activator=\"{ attrs, on }\" >\r\n                  <v-text-field\r\n                      v-model=\"searchString\"\r\n                      outlined\r\n                      clearable\r\n                      prepend-icon=\"mdi-magnify\"\r\n                      v-on=\"on\"\r\n                      style =\"border-style: dashed; max-height: 60px;\"\r\n                    >\r\n                    </v-text-field>\r\n                    <v-btn                     \r\n                      color=\"primary\"\r\n                      class=\"white--text ma-5\"\r\n                      v-bind=\"attrs\"\r\n                      style =\"border-style: dashed\"\r\n                    >\r\n                      Search\r\n                    </v-btn>\r\n                  </template>\r\n                  <v-list v-for=\"(item, index) in filteredData\" :key=\"index\"   style =\"border-style: dashed;\">\r\n                   <v-list-item  v-if=\"index < 3\">\r\n                      <v-list-item-icon> <v-icon color=\"indigo\"> mdi-map-marker </v-icon> </v-list-item-icon>  \r\n                      <v-list-item-content>\r\n                        <v-list-item-title>  {{ item.name }} </v-list-item-title>\r\n                        <v-list-item-subtitle>{{ item.city }} {{ item.country}}</v-list-item-subtitle>\r\n                        <!-- <v-list-item v-if=\"index < 1\"> <p><b> Show More...</b></p> </v-list-item> -->\r\n                       </v-list-item-content>\r\n                    </v-list-item>\r\n                  </v-list>\r\n                </v-menu>\r\n              </v-row>\r\n            </v-app>\r\n          </div>\r\n        </v-row>\r\n      </v-container>\r\n    </v-main>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  /* eslint-disable */\r\n  // eslint-disable-next-line\r\n  name: \"Home\",\r\n\r\n  data: () => ({\r\n    searchString: \"\",\r\n    postList: [],\r\n    closeOnClick: false,\r\n  }),\r\n  methods: {\r\n    getData() {\r\n      axios.get(\"mockData.json\").then((response) => {\r\n        const list = response.data.data;\r\n        for (let i = 0; i < list.length; i++) {\r\n          const x = list[i];\r\n\r\n          this.postList.push({\r\n            name: x[0],\r\n            company: x[1],\r\n            email: x[2],\r\n            date: x[3],\r\n            country: x[4],\r\n            city: x[5],\r\n          });\r\n        }\r\n        // class Post {\r\n        //   constructor(title, link, author, img) {\r\n        //     this.title = title;\r\n        //     this.link = link;\r\n        //     this.author = author;\r\n        //     this.img = img;\r\n        //   }\r\n        // }\r\n      });\r\n    },\r\n  },\r\n  computed: {\r\n    filteredData() {\r\n      var self = this;\r\n      self.postList = self.postList.filter((customer) => {\r\n        if (customer.name.toLowerCase().indexOf(self.searchString.toLowerCase()) >= 0 ||\r\n          customer.company.toLowerCase().indexOf(self.searchString.toLowerCase()) >= 0 ||\r\n          customer.city.toLowerCase().indexOf(self.searchString.toLowerCase()) >= 0)\r\n          return customer;\r\n      });\r\n      \r\n      return self.postList;\r\n    },\r\n  },\r\n  created() {\r\n    axios.get(\"mockData.json\").then((response) => {\r\n      const list = response.data.data;\r\n      for (let i = 0; i < list.length; i++) {\r\n        const x = list[i];\r\n\r\n        this.postList.push({\r\n          name: x[0],\r\n          company: x[1],\r\n          email: x[2],\r\n          date: x[3],\r\n          country: x[4],\r\n          city: x[5],\r\n        });\r\n      }\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}