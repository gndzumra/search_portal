{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  /* eslint-disable */\n  // eslint-disable-next-line\n  name: \"Home\",\n  data: function data() {\n    return {\n      searchString: \"\",\n      postList: [],\n      closeOnClick: false,\n      slider: [\"red\", \"green\", \"orange\", \"blue\", \"pink\", \"purple\", \"indigo\", \"cyan\", \"deep-purple\", \"light-green\", \"deep-orange\", \"blue-grey\"]\n    };\n  },\n  methods: {\n    getData: function getData() {\n      var _this = this;\n\n      axios.get(\"mockData.json\").then(function (response) {\n        var list = response.data.data;\n\n        for (var i = 0; i < list.length; i++) {\n          var x = list[i];\n\n          _this.postList.push({\n            name: x[0],\n            company: x[1],\n            email: x[2],\n            date: x[3],\n            country: x[4],\n            city: x[5]\n          });\n        } // class Post {\n        //   constructor(title, link, author, img) {\n        //     this.title = title;\n        //     this.link = link;\n        //     this.author = author;\n        //     this.img = img;\n        //   }\n        // }\n\n      });\n    }\n  },\n  computed: {\n    filteredData: function filteredData() {\n      var self = this;\n      self.postList = self.postList.filter(function (customer) {\n        if (customer.name.toLowerCase().indexOf(self.searchString.toLowerCase()) >= 0 || customer.company.toLowerCase().indexOf(self.searchString.toLowerCase()) >= 0 || customer.city.toLowerCase().indexOf(self.searchString.toLowerCase()) >= 0) return customer;\n      });\n      return self.postList;\n    },\n    columns: function columns() {\n      if (this.$vuetify.breakpoint.xl) {\n        return 4;\n      }\n\n      if (this.$vuetify.breakpoint.lg) {\n        return 3;\n      }\n\n      if (this.$vuetify.breakpoint.md) {\n        return 2;\n      }\n\n      return 1;\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    axios.get(\"mockData.json\").then(function (response) {\n      var list = response.data.data;\n\n      for (var i = 0; i < list.length; i++) {\n        var x = list[i];\n\n        _this2.postList.push({\n          name: x[0],\n          company: x[1],\n          email: x[2],\n          date: x[3],\n          country: x[4],\n          city: x[5]\n        });\n      }\n    });\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AAEA;EACA;EACA;EACAA,YAHA;EAKAC;IAAA;MACAC,gBADA;MAEAC,YAFA;MAGAC,mBAHA;MAIAC,SACA,KADA,EAEA,OAFA,EAGA,QAHA,EAIA,MAJA,EAKA,MALA,EAMA,QANA,EAOA,QAPA,EAQA,MARA,EASA,aATA,EAUA,aAVA,EAWA,aAXA,EAYA,WAZA;IAJA;EAAA,CALA;EAwBAC;IACAC,OADA,qBACA;MAAA;;MACAC;QACA;;QACA;UACA;;UAEA;YACAR,UADA;YAEAS,aAFA;YAGAC,WAHA;YAIAC,UAJA;YAKAC,aALA;YAMAC;UANA;QAQA,CAbA,CAcA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;MACA,CAtBA;IAuBA;EAzBA,CAxBA;EAmDAC;IACAC,YADA,0BACA;MACA;MACAC;QACA,IACAC,cACAC,WADA,GAEAC,OAFA,CAEAH,+BAFA,KAEA,CAFA,IAGAC,iBACAC,WADA,GAEAC,OAFA,CAEAH,+BAFA,KAEA,CALA,IAMAC,cACAC,WADA,GAEAC,OAFA,CAEAH,+BAFA,KAEA,CATA,EAWA;MACA,CAbA;MAeA;IACA,CAnBA;IAoBAI,OApBA,qBAoBA;MACA;QACA;MACA;;MAEA;QACA;MACA;;MAEA;QACA;MACA;;MAEA;IACA;EAlCA,CAnDA;EAuFAC,OAvFA,qBAuFA;IAAA;;IACAb;MACA;;MACA;QACA;;QAEA;UACAR,UADA;UAEAS,aAFA;UAGAC,WAHA;UAIAC,UAJA;UAKAC,aALA;UAMAC;QANA;MAQA;IACA,CAdA;EAeA;AAvGA","names":["name","data","searchString","postList","closeOnClick","slider","methods","getData","axios","company","email","date","country","city","computed","filteredData","self","customer","toLowerCase","indexOf","columns","created"],"sourceRoot":"src/components","sources":["Home.vue"],"sourcesContent":["<template>\n  <v-app id=\"inspire\">\n  \n\n    <v-content style=\"  background-color: pink;\">\n    <v-carousel> \n        <template v-for=\"(item, index) in slider\"> \n          <v-carousel-item v-if=\"(index + 1) % columns === 1 || columns === 1\" :key=\"index\"> \n            <v-row class=\"flex-nowrap\" style=\"height:50%\"> \n              <template v-for=\"(n,i) in columns\"> \n                <template v-if=\"(+index + i) < slider.length\"> \n                  <v-col :key=\"i\"> \n                    <v-sheet v-if=\"(+index + i) <5\" height=\"50%\"\n                    >\n                      <v-row class=\"fill-height\" text-align=\"center\" justify=\"center\">\n                        <div class=\"display-3\">{{+index + i + 1}}</div>\n                      </v-row>\n                    </v-sheet>\n                  </v-col> \n                </template> \n              </template> \n            </v-row> \n          </v-carousel-item> \n        </template> \n      </v-carousel>  \n    </v-content>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  /* eslint-disable */\n  // eslint-disable-next-line\n  name: \"Home\",\n\n  data: () => ({\n    searchString: \"\",\n    postList: [],\n    closeOnClick: false,\n        slider: [\n        \"red\", \n        \"green\", \n        \"orange\", \n        \"blue\", \n        \"pink\", \n        \"purple\", \n        \"indigo\", \n        \"cyan\", \n        \"deep-purple\", \n        \"light-green\", \n        \"deep-orange\", \n        \"blue-grey\"\n      ]\n  }),\n  methods: {\n    getData() {\n      axios.get(\"mockData.json\").then((response) => {\n        const list = response.data.data;\n        for (let i = 0; i < list.length; i++) {\n          const x = list[i];\n\n          this.postList.push({\n            name: x[0],\n            company: x[1],\n            email: x[2],\n            date: x[3],\n            country: x[4],\n            city: x[5],\n          });\n        }\n        // class Post {\n        //   constructor(title, link, author, img) {\n        //     this.title = title;\n        //     this.link = link;\n        //     this.author = author;\n        //     this.img = img;\n        //   }\n        // }\n      });\n    },\n  },\n  computed: {\n    filteredData() {\n      var self = this;\n      self.postList = self.postList.filter((customer) => {\n        if (\n          customer.name\n            .toLowerCase()\n            .indexOf(self.searchString.toLowerCase()) >= 0 ||\n          customer.company\n            .toLowerCase()\n            .indexOf(self.searchString.toLowerCase()) >= 0 ||\n          customer.city\n            .toLowerCase()\n            .indexOf(self.searchString.toLowerCase()) >= 0\n        )\n          return customer;\n      });\n\n      return self.postList;\n    },\n      columns() {\n      if (this.$vuetify.breakpoint.xl) {\n        return 4;\n      }\n\n      if (this.$vuetify.breakpoint.lg) {\n        return 3;\n      }\n\n      if (this.$vuetify.breakpoint.md) {\n        return 2;\n      }\n\n      return 1;\n    }\n  },\n  created() {\n    axios.get(\"mockData.json\").then((response) => {\n      const list = response.data.data;\n      for (let i = 0; i < list.length; i++) {\n        const x = list[i];\n\n        this.postList.push({\n          name: x[0],\n          company: x[1],\n          email: x[2],\n          date: x[3],\n          country: x[4],\n          city: x[5],\n        });\n      }\n    });\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"]},"metadata":{},"sourceType":"module"}