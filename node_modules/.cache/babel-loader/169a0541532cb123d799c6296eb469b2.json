{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  /* eslint-disable */\n  // eslint-disable-next-line\n  name: \"Home\",\n  data: function data() {\n    return {\n      searchString: \"\",\n      postList: [],\n      closeOnClick: false\n    };\n  },\n  methods: {\n    getData: function getData() {\n      var _this = this;\n\n      axios.get(\"mockData.json\").then(function (response) {\n        var list = response.data.data;\n\n        for (var i = 0; i < list.length; i++) {\n          var x = list[i];\n\n          _this.postList.push({\n            name: x[0],\n            company: x[1],\n            email: x[2],\n            date: x[3],\n            country: x[4],\n            city: x[5]\n          });\n        } // class Post {\n        //   constructor(title, link, author, img) {\n        //     this.title = title;\n        //     this.link = link;\n        //     this.author = author;\n        //     this.img = img;\n        //   }\n        // }\n\n      });\n    }\n  },\n  computed: {\n    filteredData: function filteredData() {\n      var self = this;\n      self.postList = self.postList.filter(function (customer) {\n        if (customer.name.toLowerCase().indexOf(self.searchString.toLowerCase()) >= 0 || customer.company.toLowerCase().indexOf(self.searchString.toLowerCase()) >= 0 || customer.city.toLowerCase().indexOf(self.searchString.toLowerCase()) >= 0) return customer;\n      });\n      return self.postList;\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    axios.get(\"mockData.json\").then(function (response) {\n      var list = response.data.data;\n\n      for (var i = 0; i < list.length; i++) {\n        var x = list[i];\n\n        _this2.postList.push({\n          name: x[0],\n          company: x[1],\n          email: x[2],\n          date: x[3],\n          country: x[4],\n          city: x[5]\n        });\n      }\n    });\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AAEA;EACA;EACA;EACAA,YAHA;EAKAC;IAAA;MACAC,gBADA;MAEAC,YAFA;MAGAC;IAHA;EAAA,CALA;EAUAC;IACAC,OADA,qBACA;MAAA;;MACAC;QACA;;QACA;UACA;;UAEA;YACAP,UADA;YAEAQ,aAFA;YAGAC,WAHA;YAIAC,UAJA;YAKAC,aALA;YAMAC;UANA;QAQA,CAbA,CAcA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;MACA,CAtBA;IAuBA;EAzBA,CAVA;EAqCAC;IACAC,YADA,0BACA;MACA;MACAC;QACA,IACAC,cACAC,WADA,GAEAC,OAFA,CAEAH,+BAFA,KAEA,CAFA,IAGAC,iBACAC,WADA,GAEAC,OAFA,CAEAH,+BAFA,KAEA,CALA,IAMAC,cACAC,WADA,GAEAC,OAFA,CAEAH,+BAFA,KAEA,CATA,EAWA;MACA,CAbA;MAeA;IACA;EAnBA,CArCA;EA0DAI,OA1DA,qBA0DA;IAAA;;IACAZ;MACA;;MACA;QACA;;QAEA;UACAP,UADA;UAEAQ,aAFA;UAGAC,WAHA;UAIAC,UAJA;UAKAC,aALA;UAMAC;QANA;MAQA;IACA,CAdA;EAeA;AA1EA","names":["name","data","searchString","postList","closeOnClick","methods","getData","axios","company","email","date","country","city","computed","filteredData","self","customer","toLowerCase","indexOf","created"],"sourceRoot":"src/components","sources":["Home.vue"],"sourcesContent":["<template>\n  <v-app id=\"inspire\">\n    <v-main style=\"border-style: dashed; margin-top: 2%; max-height: 20%; background-color: blueviolet;\">\n        <v-row style=\"background-color: yellow;\">\n          <v-col>\n            <v-btn\n              style=\"float: right;  border-radius: 12px\"\n              class=\"mb-2\"\n              color=\"#204080\"\n            >\n              <span style=\"color: white; text-transform: none\">\n                Add New Record\n              </span>\n            </v-btn>\n          </v-col>\n        </v-row>\n\n        <v-row justify=\"space-around\" style=\"text-align: -webkit-center; height: 00px; background-color: chartreuse;\">\n          <v-menu\n            max-width=\"400px\"\n            max-height=\"200px\"\n            :nudge-width=\"200\"\n            :close-on-click=\"closeOnClick\"\n            offset-y\n          >\n            <template v-slot:activator=\"{ attrs, on }\">\n              <v-text-field\n                v-model=\"searchString\"\n                outlined\n                clearable\n                prepend-icon=\"mdi-magnify\"\n                v-on=\"on\"\n                style=\"border-style: dashed; max-height: 60px\"\n              >\n              </v-text-field>\n              <v-btn\n                color=\"primary\"\n                class=\"white--text ma-5\"\n                v-bind=\"attrs\"\n                style=\"border-style: dashed\"\n              >\n                Search\n              </v-btn>\n            </template>\n            <v-list\n              v-for=\"(item, index) in filteredData\"\n              :key=\"index\"\n              style=\"border-style: dashed\"\n            >\n              <v-list-item v-if=\"index < 3\">\n                <v-list-item-icon>\n                  <v-icon color=\"indigo\"> mdi-map-marker </v-icon>\n                </v-list-item-icon>\n                <v-list-item-content>\n                  <v-list-item-title> {{ item.name }} </v-list-item-title>\n                  <v-list-item-subtitle\n                    >{{ item.city }} {{ item.country }}</v-list-item-subtitle\n                  >\n                  <!-- <v-list-item v-if=\"index < 1\"> <p><b> Show More...</b></p> </v-list-item> -->\n                </v-list-item-content>\n              </v-list-item>\n            </v-list>\n          </v-menu>\n        \n        </v-row>\n    </v-main>\n\n    <v-content style=\"border-style: dashed; margin-top: 2%; background-color: pink;\">\n      <v-carousel>\n        <template v-for=\"(item, index) in slider\">\n          <v-carousel-item\n            v-if=\"(index + 1) % columns === 1 || columns === 1\"\n            :key=\"index\"\n          >\n            <v-row class=\"flex-nowrap\" style=\"height: 100%\">\n              <template v-for=\"(n, i) in columns\">\n                <template v-if=\"+index + i < slider.length\">\n                  <v-col :key=\"i\">\n                    <v-sheet\n                      v-if=\"+index + i < slider.length\"\n                      :color=\"slider[+index + i]\"\n                      height=\"100%\"\n                    >\n                      <v-row\n                        class=\"fill-height\"\n                        align=\"center\"\n                        justify=\"center\"\n                      >\n                        <div class=\"display-3\">{{ +index + i + 1 }}</div>\n                      </v-row>\n                    </v-sheet>\n                  </v-col>\n                </template>\n              </template>\n            </v-row>\n          </v-carousel-item>\n        </template>\n      </v-carousel>\n    </v-content>\n  </v-app>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  /* eslint-disable */\n  // eslint-disable-next-line\n  name: \"Home\",\n\n  data: () => ({\n    searchString: \"\",\n    postList: [],\n    closeOnClick: false,\n  }),\n  methods: {\n    getData() {\n      axios.get(\"mockData.json\").then((response) => {\n        const list = response.data.data;\n        for (let i = 0; i < list.length; i++) {\n          const x = list[i];\n\n          this.postList.push({\n            name: x[0],\n            company: x[1],\n            email: x[2],\n            date: x[3],\n            country: x[4],\n            city: x[5],\n          });\n        }\n        // class Post {\n        //   constructor(title, link, author, img) {\n        //     this.title = title;\n        //     this.link = link;\n        //     this.author = author;\n        //     this.img = img;\n        //   }\n        // }\n      });\n    },\n  },\n  computed: {\n    filteredData() {\n      var self = this;\n      self.postList = self.postList.filter((customer) => {\n        if (\n          customer.name\n            .toLowerCase()\n            .indexOf(self.searchString.toLowerCase()) >= 0 ||\n          customer.company\n            .toLowerCase()\n            .indexOf(self.searchString.toLowerCase()) >= 0 ||\n          customer.city\n            .toLowerCase()\n            .indexOf(self.searchString.toLowerCase()) >= 0\n        )\n          return customer;\n      });\n\n      return self.postList;\n    },\n  },\n  created() {\n    axios.get(\"mockData.json\").then((response) => {\n      const list = response.data.data;\n      for (let i = 0; i < list.length; i++) {\n        const x = list[i];\n\n        this.postList.push({\n          name: x[0],\n          company: x[1],\n          email: x[2],\n          date: x[3],\n          country: x[4],\n          city: x[5],\n        });\n      }\n    });\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"]},"metadata":{},"sourceType":"module"}